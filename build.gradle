plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'jacoco'
    id "org.sonarqube" version "3.0"
}

sonarqube {
  properties {
    property "sonar.projectKey", "saburto_ruts"
    property "sonar.organization", "saburto"
    property "sonar.host.url", "https://sonarcloud.io"
  }
}

group = 'com.saburto'
version = '1.0.1'

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

dependencies {
    testCompile('org.junit.jupiter:junit-jupiter-api:5.3.1')
    testCompile('org.junit.jupiter:junit-jupiter-params:5.3.1')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.3.1')
    testCompile("org.assertj:assertj-core:3.11.1")
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

repositories {
    jcenter()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'ruts'
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'Ruts'
                description = 'Simple java library to manage RUT as value object'
                url = 'https://github.com/saburto/ruts'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://github.com/saburto/ruts/blob/master/LICENSE'
                    }
                }
                scm {
                    url = 'https://github.com/saburto/ruts'
                }
                developers {
                  developer {
                    id = 'saburto'
                    name = 'Sebastian Aburto'
                    email = 'seba.aburto@gmail.com'
                  }
                }
            }
        }
    }
    repositories {
        maven {
          url project.findProperty("publish.url") ?: ""
          credentials {
            username project.findProperty("sonatypeUsername") ?: ""
            password project.findProperty("sonatypePassword") ?: ""
          }
        }
    }
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

signing {
  sign publishing.publications.mavenJava
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
